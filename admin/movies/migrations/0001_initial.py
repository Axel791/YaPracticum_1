# Generated by Django 4.2.2 on 2023-06-07 21:13

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilmWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('creation_date', models.DateTimeField(blank=True, verbose_name='creation date')),
                ('rating', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='rating')),
                ('type', models.CharField(choices=[('TV', 'tv_show'), ('MV', 'movie')], max_length=2, verbose_name='type')),
            ],
            options={
                'verbose_name': 'Film',
                'verbose_name_plural': 'Films',
                'db_table': 'content"."film_work',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
                'db_table': 'content"."genre',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('full_name', models.CharField(max_length=250, verbose_name='full name')),
            ],
            options={
                'verbose_name': 'Human',
                'verbose_name_plural': 'People',
                'db_table': 'content"."person',
            },
        ),
        migrations.CreateModel(
            name='PersonFilmWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=50, verbose_name='Role')),
                ('crated', models.DateTimeField(auto_now_add=True)),
                ('film_work_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='film_persons', to='movies.filmwork')),
                ('person_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persons', to='movies.person')),
            ],
            options={
                'verbose_name': 'Film employee',
                'verbose_name_plural': 'Film employees',
                'db_table': 'content"."person_film_work',
            },
        ),
        migrations.CreateModel(
            name='GenreFilmWork',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('crated', models.DateTimeField(auto_now_add=True)),
                ('film_work_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='film_genres', to='movies.filmwork')),
                ('genre_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genres', to='movies.genre')),
            ],
            options={
                'verbose_name': 'Genre film',
                'verbose_name_plural': 'Genres film',
                'db_table': 'content"."genre_film_work',
            },
        ),
        migrations.AddIndex(
            model_name='filmwork',
            index=models.Index(fields=['rating', 'created'], name='fim_created_date_rating_index'),
        ),
        migrations.AddConstraint(
            model_name='filmwork',
            constraint=models.UniqueConstraint(fields=('title',), name='film_title_index'),
        ),
        migrations.AddConstraint(
            model_name='personfilmwork',
            constraint=models.UniqueConstraint(fields=('person_id', 'film_work_id'), name='person_film_work_id_index'),
        ),
        migrations.AddConstraint(
            model_name='genrefilmwork',
            constraint=models.UniqueConstraint(fields=('genre_id', 'film_work_id'), name='genre_film_work_id_index'),
        ),
    ]
