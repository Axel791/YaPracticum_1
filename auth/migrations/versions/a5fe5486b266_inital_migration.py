"""inital_migration

Revision ID: a5fe5486b266
Revises: 
Create Date: 2023-07-22 13:07:01.072606

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "a5fe5486b266"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("role_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column(
            "permission_class",
            sa.Enum("ALL", "MEDIUM", "SOME", "NOT_ALL", name="permissions"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("role_name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("login", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("user_role_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_role_id"],
            ["role.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("login"),
        sa.UniqueConstraint("token"),
    )
    op.drop_table("auth_user")
    op.drop_table("django_migrations")
    op.drop_table("auth_group")
    op.drop_table("django_admin_log")
    op.drop_table("auth_user_user_permissions")
    op.drop_table("django_session")
    op.drop_table("django_content_type")
    op.drop_table("auth_group_permissions")
    op.drop_table("auth_user_groups")
    op.drop_table("auth_permission")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_permission",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("content_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "codename", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
    )
    op.create_table(
        "auth_user_groups",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "auth_group_permissions",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("group_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "django_content_type",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "app_label", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("model", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    )
    op.create_table(
        "django_session",
        sa.Column(
            "session_key", sa.VARCHAR(length=40), autoincrement=False, nullable=False
        ),
        sa.Column("session_data", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "expire_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_table(
        "auth_user_user_permissions",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("permission_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_table(
        "django_admin_log",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "action_time",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("object_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "object_repr", sa.VARCHAR(length=200), autoincrement=False, nullable=False
        ),
        sa.Column("action_flag", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.Column("change_message", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("content_type_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.CheckConstraint(
            "action_flag >= 0", name="django_admin_log_action_flag_check"
        ),
    )
    op.create_table(
        "auth_group",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    )
    op.create_table(
        "django_migrations",
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("app", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "applied",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_table(
        "auth_user",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "password", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.Column(
            "last_login",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_superuser", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=150), autoincrement=False, nullable=False
        ),
        sa.Column(
            "first_name", sa.VARCHAR(length=150), autoincrement=False, nullable=False
        ),
        sa.Column(
            "last_name", sa.VARCHAR(length=150), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.VARCHAR(length=254), autoincrement=False, nullable=False),
        sa.Column("is_staff", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "date_joined",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_table("users")
    op.drop_table("role")
    # ### end Alembic commands ###
